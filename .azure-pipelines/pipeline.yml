trigger: none
pr: none

# Monthly schedules (UTC)
schedules:
- cron: "5 2 1 * *"
  displayName: "Monthly ALLADH – NonProd"
  branches: { include: [ develop_new ] }
  always: true
- cron: "35 2 1 * *"
  displayName: "Monthly ALLADH – Prod"
  branches: { include: [ develop_new ] }
  always: true

# -------- Parameters for manual runs --------
parameters:
- name: run_mode
  type: string
  default: ByCustodian
  values: [ ByCustodian, AllADH ]

- name: adh_group
  type: string
  default: ""

- name: adh_groups_list
  type: object
  default: []          # e.g. ["CSM", "NHH"]

- name: adh_subscription_type
  type: string
  default: prd
  values: [ prd, nonprd ]

- name: poolType
  type: string
  default: self
  values: [ hosted, self ]

- name: poolSuffix
  type: string
  default: '_agent1'
  values: [ '_agent1', '_agent2' ]

# Inputs
- name: prodCsvPath
  type: string
  default: '$(Build.SourcesDirectory)/sanitychecks/inputs/prod_permissions.csv'
- name: nonProdCsvPath
  type: string
  default: '$(Build.SourcesDirectory)/sanitychecks/inputs/nonprod_permissions.csv'
- name: kvSecretsCsvPath
  type: string
  default: '$(Build.SourcesDirectory)/sanitychecks/inputs/kvsecretsscan.csv'

# Helper: first custodian for multi runs
variables:
- name: firstCustodian
  value: ''
- ${{ if gt(length(parameters.adh_groups_list), 0) }}:
  - name: firstCustodian
    value: ${{ parameters.adh_groups_list[0] }}

stages:

# ===================== SCHEDULED MONTHLY ALLADH =====================
- template: stages/rg-permissions.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: nonprd
    prodCsvPath: ${{ parameters.prodCsvPath }}
    nonProdCsvPath: ${{ parameters.nonProdCsvPath }}
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/rg-perms'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_nonprd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/rg-tags.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: nonprd
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/rg-tags'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_nonprd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/kv-secrets.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: nonprd
    secretsCsvPath: ${{ parameters.kvSecretsCsvPath }}
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/kv-secrets'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_nonprd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/kv-permissions.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: nonprd
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/kv-perms'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_nonprd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/kv-firewall.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: nonprd
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/kv-firewall'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_nonprd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/rg-permissions.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: prd
    prodCsvPath: ${{ parameters.prodCsvPath }}
    nonProdCsvPath: ${{ parameters.nonProdCsvPath }}
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/rg-perms'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_prd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/rg-tags.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: prd
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/rg-tags'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_prd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/kv-secrets.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: prd
    secretsCsvPath: ${{ parameters.kvSecretsCsvPath }}
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/kv-secrets'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_prd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/kv-permissions.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: prd
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/kv-perms'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_prd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

- template: stages/kv-firewall.stage.yml
  parameters:
    run_mode: AllADH
    adh_subscription_type: prd
    variableGroup: 'modernization_tfstate_backend_details'
    outDir: '$(Build.ArtifactStagingDirectory)/kv-firewall'
    branchName: '$(Build.SourceBranchName)'
    poolType: self
    poolName: 'MDM_prd_agent1'
    useDemands: false
  condition: and(eq(variables['Build.Reason'],'Schedule'), eq(variables['Build.SourceBranchName'],'develop_new'))

# ===================== MANUAL SINGLE ByCustodian =====================
- ${{ if and(eq(parameters.run_mode, 'ByCustodian'), eq(length(parameters.adh_groups_list), 0)) }}:
  - template: stages/rg-permissions.stage.yml
    parameters:
      run_mode: ByCustodian
      adh_group: ${{ parameters.adh_group }}
      adh_subscription_type: ${{ parameters.adh_subscription_type }}
      prodCsvPath: ${{ parameters.prodCsvPath }}
      nonProdCsvPath: ${{ parameters.nonProdCsvPath }}
      variableGroup: 'modernization_tfstate_backend_details'
      outDir: '$(Build.ArtifactStagingDirectory)/rg-perms'
      branchName: '$(Build.SourceBranchName)'
      poolType: self
      poolName: ''                 # computed by job template
      poolSuffix: ${{ parameters.poolSuffix }}
      useDemands: true
  - template: stages/rg-tags.stage.yml
    parameters:
      run_mode: ByCustodian
      adh_group: ${{ parameters.adh_group }}
      adh_subscription_type: ${{ parameters.adh_subscription_type }}
      variableGroup: 'modernization_tfstate_backend_details'
      outDir: '$(Build.ArtifactStagingDirectory)/rg-tags'
      branchName: '$(Build.SourceBranchName)'
      poolType: self
      poolName: ''
      poolSuffix: ${{ parameters.poolSuffix }}
      useDemands: true
  - template: stages/kv-secrets.stage.yml
    parameters:
      run_mode: ByCustodian
      adh_group: ${{ parameters.adh_group }}
      adh_subscription_type: ${{ parameters.adh_subscription_type }}
      secretsCsvPath: ${{ parameters.kvSecretsCsvPath }}
      variableGroup: 'modernization_tfstate_backend_details'
      outDir: '$(Build.ArtifactStagingDirectory)/kv-secrets'
      branchName: '$(Build.SourceBranchName)'
      poolType: self
      poolName: ''
      poolSuffix: ${{ parameters.poolSuffix }}
      useDemands: true
  - template: stages/kv-permissions.stage.yml
    parameters:
      run_mode: ByCustodian
      adh_group: ${{ parameters.adh_group }}
      adh_subscription_type: ${{ parameters.adh_subscription_type }}
      variableGroup: 'modernization_tfstate_backend_details'
      outDir: '$(Build.ArtifactStagingDirectory)/kv-perms'
      branchName: '$(Build.SourceBranchName)'
      poolType: self
      poolName: ''
      poolSuffix: ${{ parameters.poolSuffix }}
      useDemands: true
  - template: stages/kv-firewall.stage.yml
    parameters:
      run_mode: ByCustodian
      adh_group: ${{ parameters.adh_group }}
      adh_subscription_type: ${{ parameters.adh_subscription_type }}
      variableGroup: 'modernization_tfstate_backend_details'
      outDir: '$(Build.ArtifactStagingDirectory)/kv-firewall'
      branchName: '$(Build.SourceBranchName)'
      poolType: self
      poolName: ''
      poolSuffix: ${{ parameters.poolSuffix }}
      useDemands: true

# ===================== MANUAL MULTI ByCustodian (shared agent from FIRST custodian) =====================
- ${{ if and(eq(parameters.run_mode, 'ByCustodian'), gt(length(parameters.adh_groups_list), 0)) }}:
  - ${{ each cust in parameters.adh_groups_list }}:
    - template: stages/rg-permissions.stage.yml
      parameters:
        run_mode: ByCustodian
        adh_group: ${{ cust }}
        adh_subscription_type: ${{ parameters.adh_subscription_type }}
        prodCsvPath: ${{ parameters.prodCsvPath }}
        nonProdCsvPath: ${{ parameters.nonProdCsvPath }}
        variableGroup: 'modernization_tfstate_backend_details'
        outDir: '$(Build.ArtifactStagingDirectory)/rg-perms'
        branchName: '$(Build.SourceBranchName)'
        poolType: self
        poolName: ${{ format('{0}_{1}{2}', variables.firstCustodian, parameters.adh_subscription_type, parameters.poolSuffix) }}
        poolSuffix: ${{ parameters.poolSuffix }}
        useDemands: false

  - ${{ each cust in parameters.adh_groups_list }}:
    - template: stages/rg-tags.stage.yml
      parameters:
        run_mode: ByCustodian
        adh_group: ${{ cust }}
        adh_subscription_type: ${{ parameters.adh_subscription_type }}
        variableGroup: 'modernization_tfstate_backend_details'
        outDir: '$(Build.ArtifactStagingDirectory)/rg-tags'
        branchName: '$(Build.SourceBranchName)'
        poolType: self
        poolName: ${{ format('{0}_{1}{2}', variables.firstCustodian, parameters.adh_subscription_type, parameters.poolSuffix) }}
        poolSuffix: ${{ parameters.poolSuffix }}
        useDemands: false

  - ${{ each cust in parameters.adh_groups_list }}:
    - template: stages/kv-secrets.stage.yml
      parameters:
        run_mode: ByCustodian
        adh_group: ${{ cust }}
        adh_subscription_type: ${{ parameters.adh_subscription_type }}
        secretsCsvPath: ${{ parameters.kvSecretsCsvPath }}
        variableGroup: 'modernization_tfstate_backend_details'
        outDir: '$(Build.ArtifactStagingDirectory)/kv-secrets'
        branchName: '$(Build.SourceBranchName)'
        poolType: self
        poolName: ${{ format('{0}_{1}{2}', variables.firstCustodian, parameters.adh_subscription_type, parameters.poolSuffix) }}
        poolSuffix: ${{ parameters.poolSuffix }}
        useDemands: false

  - ${{ each cust in parameters.adh_groups_list }}:
    - template: stages/kv-permissions.stage.yml
      parameters:
        run_mode: ByCustodian
        adh_group: ${{ cust }}
        adh_subscription_type: ${{ parameters.adh_subscription_type }}
        variableGroup: 'modernization_tfstate_backend_details'
        outDir: '$(Build.ArtifactStagingDirectory)/kv-perms'
        branchName: '$(Build.SourceBranchName)'
        poolType: self
        poolName: ${{ format('{0}_{1}{2}', variables.firstCustodian, parameters.adh_subscription_type, parameters.poolSuffix) }}
        poolSuffix: ${{ parameters.poolSuffix }}
        useDemands: false

  - ${{ each cust in parameters.adh_groups_list }}:
    - template: stages/kv-firewall.stage.yml
      parameters:
        run_mode: ByCustodian
        adh_group: ${{ cust }}
        adh_subscription_type: ${{ parameters.adh_subscription_type }}
        variableGroup: 'modernization_tfstate_backend_details'
        outDir: '$(Build.ArtifactStagingDirectory)/kv-firewall'
        branchName: '$(Build.SourceBranchName)'
        poolType: self
        poolName: ${{ format('{0}_{1}{2}', variables.firstCustodian, parameters.adh_subscription_type, parameters.poolSuffix) }}
        poolSuffix: ${{ parameters.poolSuffix }}
        useDemands: false
